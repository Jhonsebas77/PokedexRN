import rgba from 'rgba-convert'
import _ from './Utilities'

export const Colors = {
    redPokedex: rgba.hex('#C64934'),
    white: rgba.hex('#FFFFFF'),
    black: rgba.hex('#121212'),
    grey: rgba.hex('#BDBDBD'),
    greyDark: rgba.hex('#CFCFCF'),
    green: rgba.hex('#077A3E'),
    red: rgba.hex('#E30613'),
    normal: rgba.hex('#ada594'),
    normal1: rgba.hex('#525252'),
    normal_border: rgba.hex('#808080'),
    fighting: rgba.hex('#a55239'),
    fighting1: rgba.hex('#4a3931'),
    flying: rgba.hex('#9cadf7'),
    flying1: rgba.hex('#425294'),
    poison: rgba.hex('#b55aa5'),
    poison1: rgba.hex('#4a3952'),
    ground: rgba.hex('#d6b55a'),
    ground1: rgba.hex('#735218'),
    rock: rgba.hex('#bda55a'),
    rock1: rgba.hex('#735218'),
    bug: rgba.hex('#adbd21'),
    bug1: rgba.hex('#426b39'),
    ghost: rgba.hex('#5A1F7A'),
    steel: rgba.hex('#adadc6'),
    steel1: rgba.hex('#525252'),
    fire: rgba.hex('#f75231'),
    fire1: rgba.hex('#732108'),
    water: rgba.hex('#399cff'),
    water1: rgba.hex('#425294'),
    grass: rgba.hex('#7bce52'),
    grass1: rgba.hex('#426b39'),
    electric: rgba.hex('#ffc631'),
    electric1: rgba.hex('#735218'),
    psychic: rgba.hex('#ff73a5'),
    psychic1: rgba.hex('#6b3939'),
    ice: rgba.hex('#5acee7'),
    ice1: rgba.hex('#425294'),
    dragon: rgba.hex('#7b63e7'),
    dragon1: rgba.hex('#4a3994'),
    dark: rgba.hex('#282227'),
    fairy: rgba.hex('#f7b5f7'),
    fairy1: rgba.hex('#bd18ce'),
    unknown: rgba.hex('#192f6a'),
    unknown1: rgba.hex('#192f6a'),
    shadow: rgba.hex('#1E1C1C'),
    background: rgba.hex('#a2db96'),
    background1: rgba.hex('#24cca9'),
    activeChip: rgba.hex('#4f8594')
}

export const GetColorType = (type: string) => {
    const typeBorder = `${type}_border`
    return _.findProperty(Colors, typeBorder)
}

export const ColorType = (type1: string, type2?: string) => {
    let ColorsType = type1 + (type2 ? '_' + type2 : '')
    const typeColor = {
        fire: { color: () => [Colors.fire, Colors.fire1] },
        unknown: { color: () => [Colors.unknown, Colors.unknown1] },
        grass: { color: () => [Colors.grass, Colors.grass1] },
        ground: { color: () => [Colors.ground, Colors.ground1] },
        bug: { color: () => [Colors.bug, Colors.bug1] },
        ice: { color: () => [Colors.ice, Colors.ice1] },
        rock: { color: () => [Colors.rock, Colors.rock1] },
        poison: { color: () => [Colors.poison, Colors.poison1] },
        normal: { color: () => [Colors.normal, Colors.normal1] },
        flying: { color: () => [Colors.flying, Colors.flying1] },
        electric: { color: () => [Colors.electric, Colors.electric1] },
        psychic: { color: () => [Colors.psychic, Colors.psychic1] },
        fairy: { color: () => [Colors.fairy, Colors.fairy1] },
        dragon: { color: () => [Colors.dragon, Colors.dragon1] },
        water: { color: () => [Colors.water, Colors.water1] },
        fighting: { color: () => [Colors.fighting, Colors.fighting1] },
        steel: { color: () => [Colors.steel, Colors.steel1] },
        steel_electric: { color: () => [Colors.electric, Colors.steel] },
        bug_grass: { color: () => [Colors.bug, Colors.grass] },
        grass_poison: { color: () => [Colors.grass, Colors.poison1] },
        water_ice: { color: () => [Colors.water, Colors.ice] },
        rock_water: { color: () => [Colors.rock1, Colors.water] },
        psychic_water: { color: () => [Colors.water, Colors.psychic] },
        psychic_grass: { color: () => [Colors.grass, Colors.psychic] },
        psychic_ice: { color: () => [Colors.ice, Colors.psychic] },
        fairy_psychic: { color: () => [Colors.psychic, Colors.fairy] },
        poison_bug: { color: () => [Colors.bug, Colors.poison1] },
        poison_ghost: { color: () => [Colors.ghost, Colors.poison] },
        poison_water: { color: () => [Colors.water, Colors.poison1] },
        ground_poison: { color: () => [Colors.poison, Colors.ground] },
        ground_rock: { color: () => [Colors.rock, Colors.ground1] },
        rock_ground: { color: () => [Colors.ground1, Colors.rock] },
        fire_flying: { color: () => [Colors.fire, Colors.fire, Colors.flying, Colors.flying] },
        flying_rock: { color: () => [Colors.rock1, Colors.flying] },
        bug_flying: { color: () => [Colors.bug, Colors.flying] },
        flying_poison: { color: () => [Colors.poison, Colors.flying] },
        flying_water: { color: () => [Colors.water1, Colors.flying] },
        flying_normal: { color: () => [Colors.normal, Colors.flying] },
        flying_dragon: { color: () => [Colors.dragon1, Colors.flying] }
    }
    return typeColor[ColorsType] ? typeColor[ColorsType].color() : [Colors.unknown, Colors.unknown]
}
